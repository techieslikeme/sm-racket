;
;Chapter 1 - Fixed Size Date 
; Ex 1
; The direct goal of this exercise is to create an expression that computes the distance of some specific 
; Cartesian point (x,y) from the origin (0,0). The indirect goal is to introduce some basic programming habits,
; especially the use of the interactions area to develop expressions.

(define (cartesian-product x y) (sqrt (+ (* x x) (* y y))))

; The following image exercises require 2htpd/image library.
(require 2htdp/image)
(circle 10 "solid" "red")
(image-width (circle 10 "solid" "red"))

; Ex-15 
; Define the function string-first, which extracts the first 1String from a non-empty string. 
; Don’t worry about empty strings.
(define (string-first s) (if (string? s) (if (> (string-length s) 0) (string-ith s 0) "UNKNOWN")"UNKNOWN"))

; Ex-16
; Define the function string-first, which extracts the first 1String from a non-empty string. 
; Don’t worry about empty strings.
(define (string-last s) (if (string? s) (if (> (string-length s) 0) 
                                            (string-ith s (- (string-length s) 1)) "UNKNOWN")"UNKNOWN"))

; Ex 17
; Define the function bool-imply. It consumes two Boolean values, call them sunny and friday. 
; The answer of the function is #true if sunny is false or friday is true.
(define (bool-imply sunny friday) (or (not sunny) friday))

(define (ff a) (+ 10 a))

(ff (+ 1 1))

; Ex 29
(define price-per-ticket 5.00)
(define total-attendance 120)
(define price-change-per-10-cents 0.1)
(define avg-change-in-attendance 15)

; Calculates the number of attendees depends on the ticket price.
(define (attendees ticket-price)
  (- total-attendance (* (- ticket-price price-per-ticket) (/ avg-change-in-attendance price-change-per-10-cents))))

;Calculates the  revenue is exclusively generated by the sale of tickets,
(define (revenue ticket-price)
  (* ticket-price (attendees ticket-price)))
